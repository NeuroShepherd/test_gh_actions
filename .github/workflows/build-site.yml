name: build-site

on:
  # note that merges from a PR will create a push event so
  # no need for a specific event
  push:
    branches: [master]


jobs:
  redeploy_site:
    runs-on: ubuntu-latest
    # unclear if this env declaration is actually needed here. However,
    # I did need to give read/write permissions to GH Actions in the
    # repo settings for the workflow to succeed
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - name: Build
        run: |
          system('mkdir -p docs')
          # install.packages("bookdown")
          # install.packages("downlit")
          # install.packages("xml2")
          if (!"renv" %in% installed.packages()) install.packages("renv")
          renv::restore()
          bookdown::render_book("index.Rmd", quiet = TRUE, output_dir = 'docs')
        shell: Rscript {0}
      - name: Deploy
      # consider finding an alternative workflow that allows for commiting changes
      # to a branch without the github pages defaults and other clutter. Note that
      # gh-pages is a special branch recognized by GitHub
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          # folder of "." saves the whole repo. If building to "docs" like above,
          # can direct GitHub Pages to look in docs folder in settings
          folder: .

      # - name: setup git config
      #   run: |
      #     # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      #     git config user.name "GitHub Actions Bot"
      #     git config user.email "<>"
      #
      # - name: Deploy custom
      #   run: |
      #     git checkout gh-pages
      #     git add docs
      #     git commit -m "Rebuild site"
      #     git push

