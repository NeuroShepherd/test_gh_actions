name: learn-github-actions-params

on: workflow_dispatch

# Define some environment variables to demonstrate them showing up in the
# env_context.json file, and likewise use env.art_name in the script
# so that a single variable can be set rather than repeating the same
# code for creating the artifact object name
env:
  hello: there
  not_helpful: 42
  art_name: my-first-artifact-run-${{ github.run_number }}

jobs:
  find-github-actions-params:
    runs-on: ubuntu-latest
    steps:

# Begin simple, and just find the command(s) for identifying the labels for
# events available through GitHub via github.events parameter
      - name: "GitHub events"
        run: |
          echo '${{ toJSON(github.event) }}' | jq
        shell: bash


# Echo the results of the github.event parameter to see all possible values,
# format with jq, and then echo the results to a file which will be saved later.
# Later added the github.ref to explore that.
# General: "github.*" is a context with options such as event (which is even
# further nested) and ref that provide information. Other contexts exist, and
# can be found at https://docs.github.com/en/actions/learn-github-actions/contexts

# "Warning: When using the whole github context, be mindful that it includes sensitive 
# information such as github.token. GitHub masks secrets when they are printed to the 
# console, but you should be cautious when exporting or printing the context."
# So just extract keys (nested) for the github context
# https://stackoverflow.com/questions/46564720/how-to-extract-all-also-nested-key-names-with-jq
      - name: "Save GH events to file"
        run: |
          {
          '${{ toJSON(github.event) }}' | jq | tee > gh_events.json
          } &> /dev/null
  #        '${{ toJSON(github) }}' | jq -r '[paths | join(".")]' | echo > github_context.json
   #       '${{ toJSON(env) }}' | jq | echo > env_context.json
   #       '${{ toJSON(vars) }}' | jq | echo > vars_context.json

          
# Check that the file exists in the dir and contains expected JSON contents
      - name: "Check file exists"
        run: |
          ls
          
# This saves the gh_events.json file as an artifact outside of the workflow.
# It can be downloaded directly from the Summary tab of a given run. In this
# example, the file should only stay available for 5 days.
      - name: "Save file as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.art_name }}
          path: |
            gh_events.json
            github_context.json
            env_context.json
            vars_context.json
          retention-days: 5

# NOTE: jobs do not share the same runner so artifacts are needed for sharing
# results between jobs!!!
  reuse-artifact:
    runs-on: ubuntu-latest
# GH jobs run in parallel not sequentially by default so we must explicitly declare
# that this job needs the other job to be done first before executing.
    needs: find-github-actions-params
    steps:

# Show that the runner is empty
      - name: "Show empty"
        run: |
          ls

# Note: You can only download artifacts in a workflow that were uploaded during the same workflow run.
      - name: "Download artifact"
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.art_name }}

# Just check the artifact contents to see that it was actually downloaded
      - name: "Show added contents"
        run: |
          ls

