name: figure out renv caching

on:
  workflow_dispatch:



jobs:
  renv_cache:
    runs-on: ubuntu-latest

    # Using these steps will automatically perform the following actions:
    #
    # renv will be installed, via install.packages("renv"),
    # renv will be configured to use the GitHub cache,
    # If provided via a with: profile: key, that renv profile will be activated,
    # The project will be restored via renv::restore().

    # code adapted from: https://github.com/actions/cache/blob/main/examples.md#r---renv
    # see also: https://rstudio.github.io/renv/articles/ci.html
    # the "Build Book" job is specific to this repo, but "Set RENV_PATHS_ROOT",
    # "Install and activate renv", and "Restore renv package cache" are the
    # necessary steps for actually caching from a renv lockfile

    # note that r-lib/actions/setup-pandoc@v2 was added for rendering
    # rmarkdown docs, specifically the {bookdown} call at the end


    steps:
    - uses: actions/checkout@v3
    - uses: r-lib/actions/setup-r@v2
    - uses: r-lib/actions/setup-renv@v2
    - uses: r-lib/actions/setup-pandoc@v2


    - name: Set RENV_PATHS_ROOT
    # For renv, the cache directory will vary by OS. The RENV_PATHS_ROOT environment variable is used to set the cache location.
      shell: bash
      run: |
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV


    - name: Install and activate renv
    # essentially, this bootstrap {renv} on the runner
      run: |
        install.packages("renv")
        renv::activate()
      shell: Rscript {0}


    - name: Restore Renv package cache
    # this procedure accesses the cache on subsequent jobs
      uses: actions/cache@v3
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
        restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-


    - name: Build book
      run: |
        system('mkdir -p docs')
        bookdown::render_book("index.Rmd", quiet = TRUE, output_dir = 'docs')
      shell: Rscript {0}


